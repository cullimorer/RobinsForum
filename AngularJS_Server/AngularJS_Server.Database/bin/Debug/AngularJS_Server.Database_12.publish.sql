/*
Deployment script for AngularJS_Server.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AngularJS_Server.Database"
:setvar DefaultFilePrefix "AngularJS_Server.Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--DELETE FROM OauthProviders
GO

GO
PRINT N'Creating [dbo].[Categories]...';


GO
CREATE TABLE [dbo].[Categories] (
    [Id]        INT            NOT NULL,
    [Name]      NVARCHAR (150) NOT NULL,
    [IsEnabled] BIT            NOT NULL,
    [CreatedOn] DATETIME       NOT NULL,
    [CreatedBy] NVARCHAR (100) NOT NULL,
    [UpdatedOn] DATETIME       NULL,
    [UpdatedBy] NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Posts]...';


GO
CREATE TABLE [dbo].[Posts] (
    [Id]          INT             NOT NULL,
    [Content]     NVARCHAR (1500) NOT NULL,
    [OauthUserId] INT             NOT NULL,
    [IsEnabled]   BIT             NOT NULL,
    [CreatedOn]   DATETIME        NOT NULL,
    [CreatedBy]   NVARCHAR (100)  NOT NULL,
    [UpdatedOn]   DATETIME        NULL,
    [UpdatedBy]   NVARCHAR (100)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Threads]...';


GO
CREATE TABLE [dbo].[Threads] (
    [Id]         INT            NOT NULL,
    [Name]       NVARCHAR (150) NOT NULL,
    [CategoryId] INT            NOT NULL,
    [IsEnabled]  BIT            NOT NULL,
    [CreatedOn]  DATETIME       NOT NULL,
    [CreatedBy]  NVARCHAR (100) NOT NULL,
    [UpdatedOn]  DATETIME       NULL,
    [UpdatedBy]  NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_Posts_OauthUsers...';


GO
ALTER TABLE [dbo].[Posts] WITH NOCHECK
    ADD CONSTRAINT [FK_Posts_OauthUsers] FOREIGN KEY ([OauthUserId]) REFERENCES [dbo].[OauthUsers] ([Id]);


GO
PRINT N'Creating FK_Threads_Categories...';


GO
ALTER TABLE [dbo].[Threads] WITH NOCHECK
    ADD CONSTRAINT [FK_Threads_Categories] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Categories] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS ( SELECT 1 FROM OauthProviders WHERE OauthProviders.Name = 'Basic')
INSERT INTO OauthProviders VALUES ('Basic');

IF NOT EXISTS ( SELECT 1 FROM OauthProviders WHERE OauthProviders.Name = 'Facebook')
INSERT INTO OauthProviders VALUES ('Facebook');
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Posts] WITH CHECK CHECK CONSTRAINT [FK_Posts_OauthUsers];

ALTER TABLE [dbo].[Threads] WITH CHECK CHECK CONSTRAINT [FK_Threads_Categories];


GO
PRINT N'Update complete.'
GO
